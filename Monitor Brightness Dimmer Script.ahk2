/**** DIRECTIVE SECTION ****/

;; This is an AutoHotkey v2 script:
#Requires AutoHotkey v2.0-a (or later)

;; Enable warnings to assist with detecting common errors:
#Warn All

;; Import the DimmerSettingsHandler class:
#Include "%A_ScriptDir%\Dimmer Settings Handler.ahk2"

;; Import the DimmerSettingsWindow class:
#Include "%A_ScriptDir%\Monitor Brightness Dimmer GUI.ahk2"

;; Import the MonitorBrightnessChanger class:
#Include "%A_ScriptDir%\Monitor Brightness Changer.ahk2"

/**** EXECUTION SECTION ****/

MonitorBrightnessDimmer.Main()

/**** CLASS SECTION ****/

;; Public:
Class MonitorBrightnessDimmer
{
    ;; Public:
    Static Main()
    {
        dimmingSettings := DimmingSettingsHandler()
        DimmerSettingsWindow.AddNewSettingsWindowToScriptTrayMenu(dimmingSettings)
        MonitorBrightnessDimmer.SleepUntilDimmingStartTime(dimmingSettings)
        MonitorBrightnessDimmer.DimToMinimumBrightness(dimmingSettings)
    }

    ;; Private:
    Static SleepUntilDimmingStartTime(dimmingSettings)
    {
        todaysDimmingStartYYYYMMDDHH24MISS := dimmingSettings.GetTodaysDimmingStartYYYYMMDDHH24MISS()
        secondsUntilDimmingStart := DateDiff(todaysDimmingStartYYYYMMDDHH24MISS, A_Now, "Seconds")
        millisecondsUntilDimmingStart := secondsUntilDimmingStart * 1000
        Sleep(millisecondsUntilDimmingStart)
    }

    ;; Private:
    Static DimToMinimumBrightness(dimmingSettings)
    {
        brightnessChanger := MonitorBrightnessChanger()
        ;; In case the minimum possible brightness value is greater than 0:
        brightnessToDimBy := brightnessChanger.GetCurrentBrightness() - brightnessChanger.GetMinimumBrightness()
        ;; Integer division (//) is used below:
        millisecondsPerBrightnessDecrement := dimmingSettings.GetDimmingDurationTotalMilliseconds() // brightnessToDimBy
        MonitorBrightnessDimmer.BeginDimmingBrightness(brightnessChanger, millisecondsPerBrightnessDecrement)
    }

    ;; Private:
    Static BeginDimmingBrightness(brightnessChanger, millisecondsPerBrightnessDecrement)
    {
        while (brightnessChanger.GetCurrentBrightness() > brightnessChanger.GetMinimumBrightness())
        {
            brightnessChanger.DecrementBrightness()
            Sleep(millisecondsPerBrightnessDecrement)
        }
    }
}